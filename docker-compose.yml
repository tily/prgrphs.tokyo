version: "2"
services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - ~/prgrphs.tokyo-private/certs:/etc/nginx/certs:ro

  dockergen:
    image: jwilder/docker-gen
    container_name: dockergen
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=dockergen
    volumes_from:
      - nginx
    volumes:
      - ~/prgrphs.tokyo-private/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - /data/mongo/db:/data/db

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - /data/redis/db:/data/

  relayr:
    build: ~/relayr/
    container_name: relayr
    restart: always
    environment:
      - RACK_ENV=production
      - VIRTUAL_HOST=relayr.prgrphs.tokyo
      - MONGOHQ_URL=mongodb://mongo/relayr_production
      - LETSENCRYPT_HOST=relayr.prgrphs.tokyo
    env_file: ~/prgrphs.tokyo-private/env_files/relayr
    links:
      - mongo:mongo
    ports:
      - "8081:8081"
    command: bundle exec rackup -p 8081 -o 0.0.0.0

  two:
    build: ~/prgrphs2/
    container_name: two
    restart: always
    environment:
      - RACK_ENV=production
      - VIRTUAL_HOST=two.prgrphs.tokyo
      - LETSENCRYPT_HOST=two.prgrphs.tokyo
    env_file: ~/prgrphs.tokyo-private/env_files/two
    ports:
      - "8083:8083"
    command: bundle exec rackup -p 8083 -o 0.0.0.0

  nnade:
    build: ~/nnade/
    container_name: nnade
    restart: always
    environment:
      - RACK_ENV=production
      - VIRTUAL_HOST=nnade.prgrphs.tokyo
      - MONGOHQ_URL=mongodb://mongo/nnade_production
      - LETSENCRYPT_HOST=nnade.prgrphs.tokyo
    env_file: ~/prgrphs.tokyo-private/env_files/nnade
    links:
      - mongo:mongo
    ports:
      - "8082:8082"
    command: bundle exec rackup -p 8082 -o 0.0.0.0

  one:
    build: ~/prgrphs1/
    container_name: one
    restart: always
    environment:
      - RACK_ENV=production
      - VIRTUAL_HOST=one.prgrphs.tokyo
      - MONGOHQ_URL=mongodb://mongo/one_production
      - LETSENCRYPT_HOST=one.prgrphs.tokyo
      - REDISTOGO_URL=redis://redis:6379
    env_file: ~/prgrphs.tokyo-private/env_files/one
    ports:
      - "8080:8080"
    command: bundle exec rackup -p 8080 -o 0.0.0.0

  one-worker:
    build: ~/prgrphs1/
    container_name: one-worker
    restart: always
    environment:
      - RACK_ENV=production
      - VIRTUAL_HOST=one.prgrphs.tokyo
      - MONGOHQ_URL=mongodb://mongo/one_production
      - LETSENCRYPT_HOST=one.prgrphs.tokyo
      - REDISTOGO_URL=redis://redis:6379
      - VERBOSE=1
      - QUEUE=*
    env_file: ~/prgrphs.tokyo-private/env_files/one
    command: bash -c "rm /tmp/.X99-lock || echo 'Lock not found, continuing normal setup' && xvfb-run bundle exec rake resque:work"

  decks:
    build: ~/decks/
    container_name: decks
    restart: always
    environment:
      - RACK_ENV=production
      - VIRTUAL_HOST=decks.prgrphs.tokyo
      - LETSENCRYPT_HOST=decks.prgrphs.tokyo
    env_file: ~/prgrphs.tokyo-private/env_files/decks
    ports:
      - "8084:8084"
    command: bundle exec rackup -p 8084 -o 0.0.0.0

  hvtg:
    build: ~/hvtg/
    container_name: hvtg
    restart: always
    environment:
      - RACK_ENV=production
      - VIRTUAL_HOST=hvtg.prgrphs.tokyo
      - LETSENCRYPT_HOST=hvtg.prgrphs.tokyo
      - PORT=8085
    env_file: ~/prgrphs.tokyo-private/env_files/hvtg
    ports:
      - "8085:8085"
